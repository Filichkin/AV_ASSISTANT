version: "3.9"

services:
  pgvector:
    image: pgvector/pgvector:pg16
    container_name: pgvector
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 -p ${POSTGRES_PORT:-5432} -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  mcp_laptops:
    build:
      context: .
      dockerfile: mcp_server/Dockerfile
      args:
        PYTHON_VERSION: ${PYTHON_VERSION:-3.12-slim}
    container_name: av_mcp_server
    depends_on:
      pgvector:
        condition: service_healthy
    env_file:
      - .env
    environment:
      COLLECTION_NAME: ${COLLECTION_NAME:-product_embeddings}
      FORCE_LOAD: ${FORCE_LOAD:-1}
    ports:
      - "${APP_PORT:-8001}:8001"

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    depends_on:
      pgvector:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT:-5050}:80" # http://localhost:5050
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped

  a2a-agent:
    build:
      context: .
      dockerfile: agent/Dockerfile
    container_name: a2a-agent
    ports:
      - "10002:10002"
    env_file:
      - .env
    environment:
      - MCP_URL=http://mcp_laptops:8001/sse
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: a2a-frontend
    depends_on:
      - a2a-agent
    env_file:
    - .env
    environment:
      AGENT_URL: ${AGENT_URL:-http://a2a-agent:10002}
      MCP_URL: ${MCP_URL:-http://mcp_laptops:8001/sse}
    ports:
    - "${FRONTEND_PORT:-10003}:10003"
    restart: unless-stopped

volumes:
  pgdata:
  pgadmin-data: